---
AWSTemplateFormatVersion: '2010-09-09'
Description: Cloud9 + QuickStart VPC (qs-1pb4pob92) (Please do not remove) May,29,2019
Metadata:
  LICENSE: Apache License, Version 2.0
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Cloud9 configuration
      Parameters:
      - C9InstanceType
      - C9StopTime
      - C9Subnet
      - EBSVolumeSize
      - BootstrapScriptS3Uri
      - BootstrapArguments
    - Label:
        default: AWS Quick Start configuration
      Parameters:
      - OutputBucketName
      - QSS3BucketName
      - QSS3KeyPrefix
    ParameterLabels:
      C9InstanceType:
        default: Cloud9 instance type
      C9StopTime:
        default: Stop time
      C9Subnet:
        default: Public subnet ID
      EBSVolumeSize:
        default: EBS volume size
      BootstrapScriptS3Uri:
        default: Bootstrap script S3 URI
      BootstrapArguments:
        default: Bootstrap script arguments
      OutputBucketName:
        default: Output S3 bucket name
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
Parameters:
  C9InstanceType:
    Description: The instance type of the new Amazon EC2 instance that AWS Cloud9
      will launch for the development environment.
    Type: String
    Default: t2.micro
    AllowedValues:
     - t2.nano
     - t2.micro
     - t2.small
     - t2.medium
     - t2.large
     - t2.xlarge
     - t2.2xlarge
     - t3.nano
     - t3.micro
     - t3.small
     - t3.medium
     - t3.large
     - t3.xlarge
     - t3.2xlarge
  C9StopTime:
    Description: The number of minutes until the running instance is shut down after
      the environment has last been used.
    Type: Number
    Default: 30
  C9Subnet:
    Description: The ID of the public subnet where your Cloud9 IDE will be installed.
    Type: String
  EBSVolumeSize:
    Description: The desired size (GB) of the Amazon EBS volume for your Cloud9 IDE.
    Type: Number
    Default: 100
  BootstrapScriptS3Uri:
    Description: S3 URI to a shell script that will be executed on the Cloud9 instance. If left blank, no custom bootstrap will be run.
    Type: String
    Default: ""
  BootstrapArguments:
    Description: Arguments string to pass to the bootstrap script.
    Type: String
    Default: ""
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/.]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), dots(.) and forward slash (/).
    Default: quickstart-cloud9-ide/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), dots(.) and
      forward slash (/).
    Type: String
Conditions:
  DoCustomBootstrap: !Not [!Equals [!Ref 'BootstrapScriptS3Uri', '']]
Resources:
  Cloud9Env:
    Type: AWS::Cloud9::EnvironmentEC2
    Properties:
      Name: !Ref AWS::StackName
      Description: !Sub '${AWS::AccountId}-${AWS::Region}-${AWS::StackName}'
      AutomaticStopTimeMinutes: !Ref C9StopTime
      InstanceType: !Ref C9InstanceType
      SubnetId: !Ref C9Subnet
      OwnerArn: !Sub 'arn:aws:sts::${AWS::AccountId}:assumed-role/TeamRole/MasterKey'
      Repositories: 
            - PathComponent: /amazon-cognito-example-for-external-idp
              RepositoryUrl: https://github.com/aws-samples/amazon-cognito-example-for-external-idp
  Cloud9Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: ec2.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Path: /
      Policies:
      - PolicyName: get-bootstrap
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: s3:GetObject
              Resource: !Sub 'arn:aws:s3:::${QSS3BucketName}/${QSS3KeyPrefix}*'
      - PolicyName: describe-ec2
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: [ "ec2:DescribeInstances", "ec2:DescribeVolumes", "ec2:ModifyVolume" ]
              Resource: '*'
      - PolicyName: deploy-demo
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: ["cognito-identity:*","cognito-idp:*","cognito-identity:*","iam:ListSAMLProviders","apigateway:*","s3:*","lambda:*","dynamodb:*","cloudformation:*"]
              Resource: '*'
      - PolicyName: demopy-demo-iam
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: "iam:*"
              Resource: ["arn:aws:iam::*:policy/*", "arn:aws:iam::*:role/*"]
  Cloud9InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles: [!Ref Cloud9Role]
  C9SetupRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Path: /
      Policies:
      - PolicyName: lambda-AttachRoleC9
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - cloudformation:DescribeStackResources
            - ec2:AssociateIamInstanceProfile
            - ec2:AuthorizeSecurityGroupIngress
            - ec2:DescribeInstances
            - ec2:DescribeInstanceStatus
            - ec2:DescribeInstanceAttribute
            - ec2:DescribeIamInstanceProfileAssociations
            - ec2:DescribeVolumes
            - ec2:DesctibeVolumeAttribute
            - ec2:DescribeVolumesModifications
            - ec2:DescribeVolumeStatus
            - ssm:DescribeInstanceInformation
            - ec2:ModifyVolume
            - ec2:ReplaceIamInstanceProfileAssociation
            - ec2:ReportInstanceStatus
            - ssm:SendCommand
            - ssm:GetCommandInvocation
            - s3:GetObject
            Resource: '*'
          - Effect: Allow
            Action: iam:PassRole
            Resource: !GetAtt 'Cloud9Role.Arn'
          - Effect: Allow
            Action: [ "lambda:AddPermission", "lambda:RemovePermission" ]
            Resource: '*'
          - Effect: Allow
            Action: [ "events:PutRule", "events:DeleteRule", "events:PutTargets", "events:RemoveTargets" ]
            Resource: '*'
  C9InstanceProfileLambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: Runs custom setup actions on Cloud9 environment
      Handler: lambda_function.handler
      Runtime: python3.6
      Role: !GetAtt 'C9SetupRole.Arn'
      Timeout: 900
      Code:
        S3Bucket: !Sub ${QSS3BucketName}
        S3Key: !Sub '${QSS3KeyPrefix}/c9InstanceProfilelambda.zip'
  C9InstanceProfile:
    Type: Custom::C9InstanceProfileLambda
    Properties:
      ServiceToken: !GetAtt 'C9InstanceProfileLambda.Arn'
      InstanceProfile: !Ref Cloud9InstanceProfile
      Cloud9Environment: !Ref Cloud9Env
  C9BootstrapLambda:
    Condition: DoCustomBootstrap
    Type: AWS::Lambda::Function
    Properties:
      Description: Runs custom setup actions on Cloud9 environment
      Handler: lambda_function.handler
      Runtime: python3.6
      Role: !GetAtt 'C9SetupRole.Arn'
      Timeout: 900
      Code:
        S3Bucket: !Sub ${QSS3BucketName}
        S3Key: !Sub '${QSS3KeyPrefix}/c9bootstraplambda.zip'
  C9Bootstrap:
    Condition: DoCustomBootstrap
    Type: Custom::C9BootstrapLambda
    Properties:
      ServiceToken: !GetAtt 'C9BootstrapLambda.Arn'
      InstanceId: !Ref C9InstanceProfile
      BootstrapPath: !Ref BootstrapScriptS3Uri
      BootstrapArguments: !Ref BootstrapArguments
Outputs:
  Cloud9Env:
    Description: Cloud9 Instance Name
    Value: !Ref Cloud9Env
